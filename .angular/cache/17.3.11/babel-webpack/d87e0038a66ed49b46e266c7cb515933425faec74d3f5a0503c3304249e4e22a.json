{"ast":null,"code":"import _asyncToGenerator from \"/Users/maxime/Desktop/paris-boat-club-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { ModalPostPage } from '../modal-post/modal-post.page';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ionic/angular\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"src/providers/reddit-service\";\nimport * as i4 from \"@angular/router\";\nimport * as i5 from \"@angular/common\";\nfunction ServicesPage_ion_item_11_img_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"img\", 11);\n  }\n  if (rf & 2) {\n    const item_r2 = i0.ɵɵnextContext().$implicit;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵpropertyInterpolate2(\"src\", \"\", ctx_r2.UrlImage, \"\", item_r2.image, \"\", i0.ɵɵsanitizeUrl);\n  }\n}\nfunction ServicesPage_ion_item_11_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"ion-item\", 9);\n    i0.ɵɵlistener(\"click\", function ServicesPage_ion_item_11_Template_ion_item_click_0_listener($event) {\n      const item_r2 = i0.ɵɵrestoreView(_r1).$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.edit($event, item_r2));\n    });\n    i0.ɵɵelementStart(1, \"ion-thumbnail\", 1);\n    i0.ɵɵtemplate(2, ServicesPage_ion_item_11_img_2_Template, 1, 3, \"img\", 10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"ion-label\")(4, \"b\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(6, \"br\");\n    i0.ɵɵelementStart(7, \"small\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const item_r2 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", item_r2.image);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", item_r2.title, \"\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", item_r2.content, \"\");\n  }\n}\nexport let ServicesPage = /*#__PURE__*/(() => {\n  class ServicesPage {\n    constructor(navCtrl, formBuilder, popoverCtrl, alertController, menu, loadingController, redditService, router, toastCtrl, loadingCtrl, modalController) {\n      this.navCtrl = navCtrl;\n      this.formBuilder = formBuilder;\n      this.popoverCtrl = popoverCtrl;\n      this.alertController = alertController;\n      this.menu = menu;\n      this.loadingController = loadingController;\n      this.redditService = redditService;\n      this.router = router;\n      this.toastCtrl = toastCtrl;\n      this.loadingCtrl = loadingCtrl;\n      this.modalController = modalController;\n      this.table = \"locations\";\n      this.category = \"location\";\n      this.status = \"\";\n      this.filter = \"\";\n      this.wordid = \"\";\n      this.total = 0;\n      this.last_page = 0;\n      this.per_page = 20;\n      this.order_id = \"id\";\n      this.order_by = \"asc\";\n      this.title = \"\";\n      this.UrlImage = \"\";\n      this.page = 1;\n    }\n    ngOnInit() {\n      this.UrlImage = this.redditService.getUrlImage();\n    }\n    ionViewWillEnter() {\n      this.getData();\n    }\n    getData() {\n      var _this = this;\n      return _asyncToGenerator(function* () {\n        //  this.simpleLoader();\n        const loading = yield _this.loadingCtrl.create({\n          message: 'Chargement..',\n          spinner: 'bubbles'\n        });\n        yield loading.present();\n        _this.page = 1;\n        _this.redditService.getDataBypage(_this.page, _this.table, _this.per_page, _this.order_id, _this.order_by, _this.category, _this.status, _this.filter).subscribe(data => {\n          loading.dismiss();\n          _this.posts = data.data;\n          console.log(data);\n          _this.total = data.total;\n          _this.per_page = data.per_page;\n          _this.currentpage = data.current_page;\n          _this.last_page = data.last_page;\n        });\n      })();\n    }\n    next(event) {\n      if (this.currentpage < this.last_page) {\n        this.page = this.page + 1;\n        this.redditService.getDataBypage(this.page, this.table, this.per_page, this.order_id, this.order_by, this.category, this.status, this.filter).subscribe(data => {\n          let postspush = data.data;\n          for (let post of postspush) {\n            this.posts.push(post);\n          }\n          this.total = data.total;\n          this.per_page = data.per_page;\n          this.currentpage = data.current_page;\n          this.last_page = data.last_page;\n        });\n        event.target.complete();\n      } else {\n        event.target.complete();\n      }\n    }\n    doInfinite(event) {\n      var _this2 = this;\n      return _asyncToGenerator(function* () {\n        _this2.next(event);\n      })();\n    }\n    handleChange(event) {\n      const query = event.target.value.toLowerCase();\n      this.filter = query;\n      this.filter = event.target.value;\n      this.page = 1;\n      setTimeout(() => {\n        this.getDataFilter();\n      }, 1000);\n    }\n    getDataFilter() {\n      var _this3 = this;\n      return _asyncToGenerator(function* () {\n        _this3.page = 1;\n        _this3.redditService.getDataBypage(_this3.page, _this3.table, _this3.per_page, _this3.order_id, _this3.order_by, _this3.category, _this3.status, _this3.filter).subscribe(data => {\n          _this3.posts = data.data;\n          _this3.total = data.total;\n          _this3.per_page = data.per_page;\n          _this3.currentpage = data.current_page;\n          _this3.last_page = data.last_page;\n        });\n      })();\n    }\n    onChangeWord(event) {\n      var _this4 = this;\n      return _asyncToGenerator(function* () {\n        _this4.filter = event.target.value;\n        _this4.page = 1;\n        setTimeout(() => {\n          _this4.getDataFilter();\n        }, 1000);\n      })();\n    }\n    onCancelword(selectedValue) {\n      this.filter == \"\";\n    }\n    reset() {\n      this.filter = \"\";\n      this.page = 1;\n      this.per_page = 20;\n      this.getData();\n    }\n    cancel() {\n      this.modal.dismiss(null, 'cancel');\n    }\n    onWillDismiss(event) {\n      const ev = event;\n    }\n    prev() {\n      if (this.page > 1) {\n        this.page = this.page - 1;\n        this.getData();\n      }\n    }\n    forward() {\n      if (this.currentpage < this.last_page) {\n        this.page = this.last_page;\n        this.redditService.getDataBypage(this.page, this.table, this.per_page, this.order_id, this.order_by, this.category, this.status, this.filter).subscribe(data => {\n          console.log(data);\n          this.posts = data.data;\n          this.total = data.total;\n          this.per_page = data.per_page;\n          this.currentpage = data.current_page;\n          this.last_page = data.last_page;\n        });\n      }\n    }\n    backward() {\n      if (this.currentpage > 1) {\n        this.page = 1;\n        this.getData();\n      }\n    }\n    post(event, item) {\n      var _this5 = this;\n      return _asyncToGenerator(function* () {\n        _this5.router.navigateByUrl('/public-post/' + item.id);\n      })();\n    }\n    edit(event, item) {\n      var _this6 = this;\n      return _asyncToGenerator(function* () {\n        const modal = yield _this6.modalController.create({\n          component: ModalPostPage,\n          componentProps: {\n            \"paramID\": item.id\n          }\n        });\n        modal.onDidDismiss().then(modelData => {\n          if (modelData !== null) {\n            _this6.modelData = modelData.data;\n            console.log('Modal Data : ' + modelData.data);\n            // this.getdata(); \n          }\n        });\n        return yield modal.present();\n      })();\n    }\n    static #_ = this.ɵfac = function ServicesPage_Factory(t) {\n      return new (t || ServicesPage)(i0.ɵɵdirectiveInject(i1.NavController), i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i1.PopoverController), i0.ɵɵdirectiveInject(i1.AlertController), i0.ɵɵdirectiveInject(i1.MenuController), i0.ɵɵdirectiveInject(i1.LoadingController), i0.ɵɵdirectiveInject(i3.RedditService), i0.ɵɵdirectiveInject(i4.Router), i0.ɵɵdirectiveInject(i1.ToastController), i0.ɵɵdirectiveInject(i1.LoadingController), i0.ɵɵdirectiveInject(i1.ModalController));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: ServicesPage,\n      selectors: [[\"app-services\"]],\n      decls: 15,\n      vars: 1,\n      consts: [[\"color\", \"secondary\"], [\"slot\", \"start\"], [\"justify-content-center\", \"\"], [\"size-md\", \"3\", \"size-lg\", \"3\", \"size-xs\", \"12\"], [\"sizeLg\", \"6\", \"sizeMd\", \"6\", \"sizeXs\", \"12\"], [\"ngFor\", \"let item of posts\"], [\"button\", \"\", 3, \"click\", 4, \"ngFor\", \"ngForOf\"], [3, \"ionInfinite\"], [\"loadingSpinner\", \"bubbles\", \"loadingText\", \"Chargement...\"], [\"button\", \"\", 3, \"click\"], [3, \"src\", 4, \"ngIf\"], [3, \"src\"]],\n      template: function ServicesPage_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"ion-header\")(1, \"ion-toolbar\", 0)(2, \"ion-buttons\", 1);\n          i0.ɵɵelement(3, \"ion-menu-button\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(4, \"ion-title\");\n          i0.ɵɵtext(5, \"Paris Boat Club \");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(6, \"ion-content\")(7, \"ion-row\", 2);\n          i0.ɵɵelement(8, \"ion-col\", 3);\n          i0.ɵɵelementStart(9, \"ion-col\", 4)(10, \"ion-list\", 5);\n          i0.ɵɵtemplate(11, ServicesPage_ion_item_11_Template, 9, 3, \"ion-item\", 6);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(12, \"ion-infinite-scroll\", 7);\n          i0.ɵɵlistener(\"ionInfinite\", function ServicesPage_Template_ion_infinite_scroll_ionInfinite_12_listener($event) {\n            return ctx.doInfinite($event);\n          });\n          i0.ɵɵelement(13, \"ion-infinite-scroll-content\", 8);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelement(14, \"ion-col\", 3);\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(11);\n          i0.ɵɵproperty(\"ngForOf\", ctx.posts);\n        }\n      },\n      dependencies: [i5.NgForOf, i5.NgIf, i1.IonButtons, i1.IonCol, i1.IonContent, i1.IonHeader, i1.IonInfiniteScroll, i1.IonInfiniteScrollContent, i1.IonItem, i1.IonLabel, i1.IonList, i1.IonMenuButton, i1.IonRow, i1.IonThumbnail, i1.IonTitle, i1.IonToolbar]\n    });\n  }\n  return ServicesPage;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}