{"ast":null,"code":"import { BrowserModule } from '@angular/platform-browser';\nimport { RouteReuseStrategy } from '@angular/router';\nimport { IonicModule, IonicRouteStrategy, IonModal } from '@ionic/angular';\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AuthenticationService } from 'src/providers/authentication.service';\nimport { AuthGuard } from 'src/providers/auth-guard.service';\n//import { StorageService } from 'src/providers/storage';\nimport { HttpClientModule, HTTP_INTERCEPTORS, HttpClient } from '@angular/common/http';\nimport { RedditService } from 'src/providers/reddit-service';\nimport { TokenInterceptor } from 'src/providers/auth.token.interceptor';\nimport { Storage } from '@ionic/storage';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { LocalService } from 'src/providers/local.service';\nimport { TranslateLoader, TranslateModule } from '@ngx-translate/core';\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ionic/angular\";\nimport * as i2 from \"@ngx-translate/core\";\nexport function createTranslateLoader(http) {\n  return new TranslateHttpLoader(http, './assets/i18n/', '.json');\n}\nexport let AppModule = /*#__PURE__*/(() => {\n  class AppModule {\n    static #_ = this.ɵfac = function AppModule_Factory(t) {\n      return new (t || AppModule)();\n    };\n    static #_2 = this.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n      type: AppModule,\n      bootstrap: [AppComponent]\n    });\n    static #_3 = this.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n      providers: [\n      // Deeplinks,\n      Storage, RedditService, AuthenticationService, AuthGuard, IonModal, LocalService, {\n        provide: RouteReuseStrategy,\n        useClass: IonicRouteStrategy\n      }, {\n        provide: HTTP_INTERCEPTORS,\n        useClass: TokenInterceptor,\n        multi: true\n      }],\n      imports: [BrowserModule, IonicModule.forRoot(), AppRoutingModule, BrowserModule, IonicModule, AppRoutingModule, HttpClientModule, FormsModule, ReactiveFormsModule, TranslateModule, TranslateModule.forRoot({\n        loader: {\n          provide: TranslateLoader,\n          useFactory: createTranslateLoader,\n          deps: [HttpClient]\n        }\n      })]\n    });\n  }\n  return AppModule;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}