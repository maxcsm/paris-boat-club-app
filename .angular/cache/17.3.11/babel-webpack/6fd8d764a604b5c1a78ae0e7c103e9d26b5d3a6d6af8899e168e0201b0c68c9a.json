{"ast":null,"code":"import _asyncToGenerator from \"/Users/maxime/Desktop/paris-boat-club-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/providers/openai.service\";\nimport * as i2 from \"src/providers/reddit-service\";\nimport * as i3 from \"@ionic/angular\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/forms\";\nimport * as i6 from \"@ngx-translate/core\";\nfunction ChatgptPage_ion_list_15_ion_card_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-card\")(1, \"ion-card-content\", 7);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const item_r1 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", item_r1.content[0].text.value, \" \");\n  }\n}\nfunction ChatgptPage_ion_list_15_ion_card_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-card\")(1, \"ion-card-content\", 8)(2, \"b\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const item_r1 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", item_r1.content[0].text.value, \" \");\n  }\n}\nfunction ChatgptPage_ion_list_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-list\");\n    i0.ɵɵtemplate(1, ChatgptPage_ion_list_15_ion_card_1_Template, 3, 1, \"ion-card\", 6)(2, ChatgptPage_ion_list_15_ion_card_2_Template, 4, 1, \"ion-card\", 6);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const item_r1 = ctx.$implicit;\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", item_r1.role == \"user\");\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", item_r1.role == \"assistant\");\n  }\n}\nexport let ChatgptPage = /*#__PURE__*/(() => {\n  class ChatgptPage {\n    constructor(openaiService, redditService, loadingController) {\n      this.openaiService = openaiService;\n      this.redditService = redditService;\n      this.loadingController = loadingController;\n      this.userInput = '';\n      this.response = '';\n      this.thread_id = '';\n    }\n    ngOnInit() {\n      this.newThread();\n    }\n    newThread() {\n      var _this = this;\n      return _asyncToGenerator(function* () {\n        var data = JSON.stringify({});\n        _this.redditService.addPost(\"newthread_chatgpt\", data).subscribe( /*#__PURE__*/function () {\n          var _ref = _asyncToGenerator(function* (response) {\n            console.log(response.thread_id);\n            _this.thread_id = response.thread_id;\n          });\n          return function (_x) {\n            return _ref.apply(this, arguments);\n          };\n        }());\n      })();\n    }\n    sendMessage() {\n      var _this2 = this;\n      return _asyncToGenerator(function* () {\n        const loader = yield _this2.loadingController.create({});\n        loader.present();\n        var data = JSON.stringify({\n          message: _this2.userInput,\n          thread_id: _this2.thread_id\n        });\n        console.log(data);\n        _this2.redditService.addPost(\"addmessage_chatgpt\", data).subscribe( /*#__PURE__*/function () {\n          var _ref2 = _asyncToGenerator(function* (response) {\n            console.log(response);\n            setTimeout(() => {\n              _this2.userInput = \"\";\n              _this2.getData();\n              loader.dismiss();\n            }, 6000);\n          });\n          return function (_x2) {\n            return _ref2.apply(this, arguments);\n          };\n        }());\n      })();\n    }\n    getData() {\n      var _this3 = this;\n      return _asyncToGenerator(function* () {\n        _this3.redditService.getMessagesBythread(_this3.thread_id).subscribe(data => {\n          console.log(data.messages.data);\n          _this3.posts = data.messages.data;\n        });\n      })();\n    }\n    static #_ = this.ɵfac = function ChatgptPage_Factory(t) {\n      return new (t || ChatgptPage)(i0.ɵɵdirectiveInject(i1.OpenaiService), i0.ɵɵdirectiveInject(i2.RedditService), i0.ɵɵdirectiveInject(i3.LoadingController));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: ChatgptPage,\n      selectors: [[\"app-chatgpt\"]],\n      decls: 16,\n      vars: 11,\n      consts: [[\"color\", \"secondary\"], [\"slot\", \"start\"], [1, \"ion-padding\"], [\"type\", \"text\", \"autoGrow\", \"true\", 1, \"roundedInput\", 2, \"height\", \"200px\", 3, \"ngModelChange\", \"ngModel\", \"placeholder\"], [\"icon-left\", \"\", \"size\", \"primary\", \"expand\", \"full\", \"shape\", \"round\", \"tappable\", \"\", 2, \"padding-top\", \"10%\", \"text-transform\", \"capitalize\", 3, \"click\"], [4, \"ngFor\", \"ngForOf\"], [4, \"ngIf\"], [2, \"color\", \"black\", \"text-align\", \"right\"], [2, \"color\", \"rgb(30, 18, 165)\", \"text-align\", \"left\"]],\n      template: function ChatgptPage_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"ion-header\")(1, \"ion-toolbar\", 0)(2, \"ion-buttons\", 1);\n          i0.ɵɵelement(3, \"ion-menu-button\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(4, \"ion-title\");\n          i0.ɵɵtext(5, \"ParisBoatClub\");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(6, \"ion-content\", 2)(7, \"h1\");\n          i0.ɵɵtext(8);\n          i0.ɵɵpipe(9, \"translate\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(10, \"ion-textarea\", 3);\n          i0.ɵɵpipe(11, \"translate\");\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function ChatgptPage_Template_ion_textarea_ngModelChange_10_listener($event) {\n            i0.ɵɵtwoWayBindingSet(ctx.userInput, $event) || (ctx.userInput = $event);\n            return $event;\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(12, \"ion-button\", 4);\n          i0.ɵɵlistener(\"click\", function ChatgptPage_Template_ion_button_click_12_listener() {\n            return ctx.sendMessage();\n          });\n          i0.ɵɵtext(13);\n          i0.ɵɵpipe(14, \"translate\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(15, ChatgptPage_ion_list_15_Template, 3, 2, \"ion-list\", 5);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(8);\n          i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(9, 5, \"askquestion\"), \" \");\n          i0.ɵɵadvance(2);\n          i0.ɵɵpropertyInterpolate(\"placeholder\", i0.ɵɵpipeBind1(11, 7, \"placequestion\"));\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.userInput);\n          i0.ɵɵadvance(3);\n          i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(14, 9, \"next\"), \" \");\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngForOf\", ctx.posts);\n        }\n      },\n      dependencies: [i4.NgForOf, i4.NgIf, i5.NgControlStatus, i5.NgModel, i3.IonButton, i3.IonButtons, i3.IonCard, i3.IonCardContent, i3.IonContent, i3.IonHeader, i3.IonList, i3.IonMenuButton, i3.IonTextarea, i3.IonTitle, i3.IonToolbar, i3.TextValueAccessor, i6.TranslatePipe],\n      styles: [\".roundedInput[_ngcontent-%COMP%]{--border-color: gray;--border-radius: 5px;--border-width: 2px;--box-shadow: 2px gray;--highlight-height: 0;--background: #f8f9fa;padding:2%;height:50px}ion-boutton[_ngcontent-%COMP%]{text-transform:capitalize}\"]\n    });\n  }\n  return ChatgptPage;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}