{"ast":null,"code":"import _asyncToGenerator from \"/Users/maxime/Desktop/paris-boat-club-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { Geolocation } from '@capacitor/geolocation';\nimport { ModalPostPage } from '../modal-post/modal-post.page';\nimport * as Leaflet from 'leaflet';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@ionic/angular\";\nimport * as i3 from \"src/providers/reddit-service\";\nimport * as i4 from \"@angular/router\";\nimport * as i5 from \"src/providers/translate-config.service\";\nimport * as i6 from \"@angular/common\";\nimport * as i7 from \"@ngx-translate/core\";\nconst _c0 = () => [0, 0.25, 0.5, 0.75];\nfunction MapPage_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelement(1, \"audio\", 11);\n    i0.ɵɵelementEnd();\n  }\n}\nfunction MapPage_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelement(1, \"audio\", 12);\n    i0.ɵɵelementEnd();\n  }\n}\nfunction MapPage_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelement(1, \"audio\", 13);\n    i0.ɵɵelementEnd();\n  }\n}\nfunction MapPage_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelement(1, \"audio\", 14);\n    i0.ɵɵelementEnd();\n  }\n}\nfunction MapPage_ng_template_20_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"ion-content\", 15)(1, \"div\", 16);\n    i0.ɵɵtext(2);\n    i0.ɵɵpipe(3, \"translate\");\n    i0.ɵɵelementStart(4, \"ion-label\")(5, \"ion-button\", 17);\n    i0.ɵɵlistener(\"click\", function MapPage_ng_template_20_Template_ion_button_click_5_listener() {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.getPositionNew());\n    });\n    i0.ɵɵtext(6);\n    i0.ɵɵpipe(7, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"ion-button\", 18);\n    i0.ɵɵlistener(\"click\", function MapPage_ng_template_20_Template_ion_button_click_8_listener() {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.setOpen(false));\n    });\n    i0.ɵɵtext(9);\n    i0.ɵɵpipe(10, \"translate\");\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(3, 3, \"geomap\"), \" \");\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(7, 5, \"yes\"), \" \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(10, 7, \"no\"), \" \");\n  }\n}\nexport let MapPage = /*#__PURE__*/(() => {\n  class MapPage {\n    constructor(formBuilder, alertController, redditService, router, modalController, loadingCtrl, loadingController, translateConfigService) {\n      this.formBuilder = formBuilder;\n      this.alertController = alertController;\n      this.redditService = redditService;\n      this.router = router;\n      this.modalController = modalController;\n      this.loadingCtrl = loadingCtrl;\n      this.loadingController = loadingController;\n      this.translateConfigService = translateConfigService;\n      this.location = false;\n      this.role = \"\";\n      this.table = \"public_locations_short\";\n      this.table2 = \"locations\";\n      this.status = \"\";\n      this.category = 2;\n      this.filter = \"\";\n      this.per_page = 100;\n      this.order_id = \"id\";\n      this.order_by = \"desc\";\n      this.isModalOpen = false;\n      this.language = this.translateConfigService.getCurrentLang();\n      console.log(this.language);\n      this.page = 1;\n    }\n    ngAfterViewInit() {\n      // this.getPositionNew(); \n      this.initializeMap();\n      setTimeout(() => {\n        this.setOpen(true);\n      }, 2000);\n    }\n    setOpen(isOpen) {\n      this.isModalOpen = isOpen;\n    }\n    initializeMap() {\n      var _this = this;\n      return _asyncToGenerator(function* () {\n        console.log(_this.map);\n        if (_this.map) {\n          _this.map.off();\n          _this.map.remove();\n        }\n        _this.latposition = 48.8582599;\n        _this.lngposition = 2.2945006;\n        _this.map = Leaflet.map(\"map\").setView([_this.latposition, _this.lngposition], 16);\n        Leaflet.tileLayer(\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\", {\n          attribution: '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n        }).addTo(_this.map);\n        const loading = yield _this.loadingCtrl.create({\n          message: 'Chargement..',\n          spinner: 'bubbles'\n        });\n        _this.redditService.getDataAll(\"public_locations_short\").subscribe(data => {\n          _this.posts = data.locations;\n          _this.posts.forEach(value => {});\n          _this.loadPoint();\n        });\n      })();\n    }\n    getPositionNew() {\n      var _this2 = this;\n      return _asyncToGenerator(function* () {\n        const loader = yield _this2.loadingController.create({\n          message: 'Recherche localisation'\n        });\n        loader.present();\n        _this2.setOpen(false);\n        const coordinates = yield Geolocation.getCurrentPosition();\n        console.log('Current position:', coordinates);\n        if (coordinates.coords.latitude !== null) {\n          _this2.latposition = coordinates.coords.latitude;\n          _this2.lngposition = coordinates.coords.longitude;\n          console.log(_this2.latposition);\n          console.log(_this2.lngposition);\n          _this2.location = true;\n          setTimeout(() => {\n            loader.dismiss();\n            var startIcon = Leaflet.icon({\n              iconUrl: './assets/icon/marker-icon.png',\n              iconAnchor: [2, 32]\n            });\n            const item = {\n              lat: _this2.latposition,\n              lng: _this2.lngposition\n            };\n            _this2.addmarker(item);\n          }, 1000);\n        }\n      })();\n    }\n    leafletMap() {\n      var startIcon = Leaflet.icon({\n        iconUrl: './assets/icon/marker-icon.png',\n        iconAnchor: [60, 60]\n      });\n      this.map = new Leaflet.Map('map').setView([this.latposition, this.lngposition], 14);\n      Leaflet.tileLayer('http://{s}.basemaps.cartocdn.com/light_all/{z}/{x}/{y}.png', {}).addTo(this.map);\n      //  const markPoint = Leaflet.marker([this.latposition, this.lngposition],{icon: startIcon});\n      //  this.map.addLayer(markPoint);\n      this.markers = Leaflet.layerGroup().addTo(this.map);\n    }\n    loadPoint() {\n      this.posts.forEach(value => {\n        console.log(value);\n        let item = value;\n        this.addmarker2(item);\n        console.log(\"foreatch\");\n      });\n    }\n    /*\n      ngOnDestroy() {\n        this.map.remove();\n      }\n    */\n    addmarker(item) {\n      console.log(item);\n      var startIcon = Leaflet.icon({\n        iconUrl: './assets/icon/marker-icon.png',\n        iconAnchor: [2, 32]\n      });\n      const markPosition = Leaflet.marker([item.lat, item.lng], {\n        icon: startIcon\n      });\n      this.map.addLayer(markPosition);\n      this.map.setView([this.latposition, this.lngposition], 17);\n    }\n    addmarker2(value) {\n      var startIcon = Leaflet.icon({\n        iconUrl: './assets/icon/marker-icon-2.png',\n        iconAnchor: [2, 10]\n      });\n      console.log(value);\n      const markPoint = Leaflet.marker([value.lat, value.lng], {\n        icon: startIcon\n      });\n      markPoint.bindPopup('<p>' + value.title + '</p>' + '<center><ion-button id=\"popup-button\" ><ion-icon name=\"eye-outline\"></ion-icon>  </ion-button>');\n      this.map.addLayer(markPoint);\n      /*  markPoint.on(\"click\",  (e) => {\n          console.log(e);\n          console.log(value.id);\n                 this.idetail=value.id;\n          this.edit( value.id);\n            });\n           */\n      markPoint.on(\"click\", e => {\n        const button = document.getElementById('popup-button');\n        if (button) {\n          button.addEventListener('click', e => {\n            console.log(e);\n            console.log(value.id);\n            this.idetail = value.id;\n            this.edit(value.id);\n            markPoint.closePopup();\n          });\n        }\n      });\n      /*\n           markPoint.bindPopup(\n           '<p>'+value.title+'</p>'+\n           '<p>'+value.title+'</p>'+\n           '<p>'+value.title+'</p>');\n      \n          this.eventid =value.item ;\n          this.edit(   this.eventid);\n         \n      */\n    }\n    edit(item) {\n      var _this3 = this;\n      return _asyncToGenerator(function* () {\n        const modal = yield _this3.modalController.create({\n          component: ModalPostPage,\n          componentProps: {\n            \"paramID\": item\n          }\n        });\n        modal.onDidDismiss().then(modelData => {\n          if (modelData !== null) {\n            _this3.modelData = modelData.data;\n            console.log('Modal Data : ' + modelData.data);\n            // this.getdata(); \n          }\n        });\n        return yield modal.present();\n      })();\n    }\n    getdataByid() {\n      var _this4 = this;\n      return _asyncToGenerator(function* () {\n        console.log(\"detail event\");\n        _this4.redditService.getByid(_this4.table, _this4.eventid).subscribe(data => {\n          _this4.postsevents = data.users;\n          console.log(_this4.postsevents);\n          _this4.techs = data.techs;\n          _this4.appointement = [data.appointement];\n          _this4.lngevnt = _this4.techs.lenght;\n        });\n      })();\n    }\n    onChangeType(event) {\n      this.technicienId = event.target.value;\n    }\n    doUpdateAppointement() {\n      var _this5 = this;\n      return _asyncToGenerator(function* () {\n        var data = JSON.stringify({\n          edited_by: _this5.technicienId,\n          state: 2\n        });\n        const alert = yield _this5.alertController.create({\n          header: 'Enregistrement',\n          message: 'Voulez-vous vraiment ? ',\n          buttons: [{\n            text: 'Annuler',\n            role: 'cancel',\n            cssClass: 'secondary',\n            handler: blah => {}\n          }, {\n            text: 'Oui',\n            handler: () => {\n              _this5.redditService.update(_this5.table, _this5.eventid, data).toPromise().then(response => {\n                setTimeout(() => {\n                  _this5.getdataByid();\n                }, 400);\n              });\n            }\n          }]\n        });\n        yield alert.present();\n      })();\n    }\n    doFinishedAppointement() {\n      var _this6 = this;\n      return _asyncToGenerator(function* () {\n        var data = JSON.stringify({\n          state: 3\n        });\n        const alert = yield _this6.alertController.create({\n          header: 'Enregistrement',\n          message: 'Voulez-vous vraiment ? ',\n          buttons: [{\n            text: 'Annuler',\n            role: 'cancel',\n            cssClass: 'secondary',\n            handler: blah => {}\n          }, {\n            text: 'Oui',\n            handler: () => {\n              _this6.redditService.update(_this6.table, _this6.eventid, data).toPromise().then(response => {\n                setTimeout(() => {\n                  _this6.getdataByid();\n                }, 1000);\n              });\n            }\n          }]\n        });\n        yield alert.present();\n      })();\n    }\n    goList() {\n      this.router.navigateByUrl('/tabs/posts');\n    }\n    presentModal() {\n      var _this7 = this;\n      return _asyncToGenerator(function* () {\n        const modal = _this7.modalController.create({\n          component: \"open-modal\",\n          breakpoints: [0, 0.3, 0.5, 0.8],\n          initialBreakpoint: 0.5\n        });\n        yield (yield modal).present();\n      })();\n    }\n    static #_ = this.ɵfac = function MapPage_Factory(t) {\n      return new (t || MapPage)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.AlertController), i0.ɵɵdirectiveInject(i3.RedditService), i0.ɵɵdirectiveInject(i4.Router), i0.ɵɵdirectiveInject(i2.ModalController), i0.ɵɵdirectiveInject(i2.LoadingController), i0.ɵɵdirectiveInject(i2.LoadingController), i0.ɵɵdirectiveInject(i5.TranslateConfigService));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: MapPage,\n      selectors: [[\"app-map\"]],\n      decls: 21,\n      vars: 11,\n      consts: [[\"color\", \"secondary\"], [\"slot\", \"start\"], [\"slot\", \"primary\"], [4, \"ngIf\"], [\"icon-left\", \"\", \"color\", \"success\", \"expand\", \"full\", \"shape\", \"round\", \"tappable\", \"\", 2, \"text-transform\", \"capitalize\", 3, \"click\"], [\"name\", \"locate-outline\"], [\"id\", \"map\"], [\"vertical\", \"bottom\", \"horizontal\", \"end\", \"slot\", \"fixed\", 1, \"btmap\"], [3, \"click\"], [\"name\", \"list\"], [\"trigger\", \"open-modal\", \"handleBehavior\", \"cycle\", 3, \"isOpen\", \"initialBreakpoint\", \"breakpoints\"], [\"controls\", \"\", \"src\", \"https://api.parisboatclub.blog/audio_fr/00_Intro_FR.mp3\"], [\"controls\", \"\", \"src\", \"https://api.parisboatclub.blog/audio_en/00_Intro_EN.mp3\"], [\"controls\", \"\", \"src\", \"https://api.parisboatclub.blog/audio_it/00_Intro_IT.mp3\"], [\"controls\", \"\", \"src\", \"https://api.parisboatclub.blog/audio_es/00_Intro_ES.mp3\"], [1, \"ion-padding\"], [1, \"ion-margin-top\", 2, \"text-align\", \"center\"], [\"icon-left\", \"\", \"color\", \"primary\", \"expand\", \"full\", \"shape\", \"round\", \"tappable\", \"\", 2, \"text-transform\", \"capitalize\", 3, \"click\"], [\"icon-left\", \"\", \"color\", \"light\", \"expand\", \"full\", \"shape\", \"round\", \"tappable\", \"\", 2, \"text-transform\", \"capitalize\", 3, \"click\"]],\n      template: function MapPage_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"ion-header\")(1, \"ion-toolbar\", 0)(2, \"ion-buttons\", 1);\n          i0.ɵɵelement(3, \"ion-menu-button\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(4, \"ion-title\");\n          i0.ɵɵtext(5, \"ParisBoatClub \");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(6, \"ion-buttons\", 2);\n          i0.ɵɵtemplate(7, MapPage_div_7_Template, 2, 0, \"div\", 3)(8, MapPage_div_8_Template, 2, 0, \"div\", 3)(9, MapPage_div_9_Template, 2, 0, \"div\", 3)(10, MapPage_div_10_Template, 2, 0, \"div\", 3);\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(11, \"ion-button\", 4);\n          i0.ɵɵlistener(\"click\", function MapPage_Template_ion_button_click_11_listener() {\n            return ctx.getPositionNew();\n          });\n          i0.ɵɵelement(12, \"ion-icon\", 5);\n          i0.ɵɵtext(13);\n          i0.ɵɵpipe(14, \"translate\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(15, \"div\", 6);\n          i0.ɵɵelementStart(16, \"ion-fab\", 7)(17, \"ion-fab-button\", 8);\n          i0.ɵɵlistener(\"click\", function MapPage_Template_ion_fab_button_click_17_listener() {\n            return ctx.goList();\n          });\n          i0.ɵɵelement(18, \"ion-icon\", 9);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(19, \"ion-modal\", 10);\n          i0.ɵɵtemplate(20, MapPage_ng_template_20_Template, 11, 9, \"ng-template\");\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(7);\n          i0.ɵɵproperty(\"ngIf\", ctx.language == \"fr\");\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.language == \"en\");\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.language == \"it\");\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.language == \"es\");\n          i0.ɵɵadvance(3);\n          i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(14, 8, \"myposition\"), \" \");\n          i0.ɵɵadvance(6);\n          i0.ɵɵproperty(\"isOpen\", ctx.isModalOpen)(\"initialBreakpoint\", 0.25)(\"breakpoints\", i0.ɵɵpureFunction0(10, _c0));\n        }\n      },\n      dependencies: [i6.NgIf, i2.IonButton, i2.IonButtons, i2.IonContent, i2.IonFab, i2.IonFabButton, i2.IonHeader, i2.IonIcon, i2.IonLabel, i2.IonMenuButton, i2.IonTitle, i2.IonToolbar, i2.IonModal, i7.TranslatePipe],\n      styles: [\"#map[_ngcontent-%COMP%]{height:100vh}.btmap[_ngcontent-%COMP%]{bottom:90px;right:15}audio[_ngcontent-%COMP%]{width:110px;height:50px}audio[_ngcontent-%COMP%]::-webkit-media-controls-volume-slider{display:none!important}audio[_ngcontent-%COMP%]::-webkit-media-controls-timeline-container{display:none!important}audio[_ngcontent-%COMP%]::-webkit-media-controls-time-remaining-display{display:none!important}audio[_ngcontent-%COMP%]::-webkit-media-controls-timeline{display:none!important}audio[_ngcontent-%COMP%]::-webkit-media-controls-panel{padding:0 0 0 1px;justify-content:center}\"]\n    });\n  }\n  return MapPage;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}